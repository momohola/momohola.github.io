<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>计算机图形学GAMES101（一）向量与线性代数</title>
    <link href="/2024/05/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6GAMES101%EF%BC%88%E4%B8%80%EF%BC%89%E5%90%91%E9%87%8F%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/"/>
    <url>/2024/05/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6GAMES101%EF%BC%88%E4%B8%80%EF%BC%89%E5%90%91%E9%87%8F%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="一、向量"><a href="#一、向量" class="headerlink" title="一、向量"></a><strong>一、向量</strong></h2><h2 id="1、向量的基本概念"><a href="#1、向量的基本概念" class="headerlink" title="1、向量的基本概念"></a>1、向量的基本概念</h2><p><img src="/2024/05/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6GAMES101%EF%BC%88%E4%B8%80%EF%BC%89%E5%90%91%E9%87%8F%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAbW9tb2hvbGE=,size_20,color_FFFFFF,t_70,g_se,x_16.png" alt="请添加图片描述"><br>向量AB&#x3D;B-A，即终点减去起点 </p><p>单位向量<br><img src="/2024/05/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6GAMES101%EF%BC%88%E4%B8%80%EF%BC%89%E5%90%91%E9%87%8F%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/89d944ff68a0489ab711bc9cfbfb14e0.png" alt="在这里插入图片描述"></p><h2 id="2、向量的运算"><a href="#2、向量的运算" class="headerlink" title="2、向量的运算"></a>2、向量的运算</h2><p>向量的表达以及向量的模<br><img src="/2024/05/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6GAMES101%EF%BC%88%E4%B8%80%EF%BC%89%E5%90%91%E9%87%8F%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/a81c76a6ab7844ceb19b56e1f67ec44d.png" alt="在这里插入图片描述"><br>点乘<br><img src="/2024/05/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6GAMES101%EF%BC%88%E4%B8%80%EF%BC%89%E5%90%91%E9%87%8F%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAbW9tb2hvbGE=,size_20,color_FFFFFF,t_70,g_se,x_16-17167072977511.png" alt="在这里插入图片描述"><br><img src="/2024/05/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6GAMES101%EF%BC%88%E4%B8%80%EF%BC%89%E5%90%91%E9%87%8F%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAbW9tb2hvbGE=,size_20,color_FFFFFF,t_70,g_se,x_16-17167072977512.png" alt="在这里插入图片描述"><br>向量的投影<br><img src="/2024/05/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6GAMES101%EF%BC%88%E4%B8%80%EF%BC%89%E5%90%91%E9%87%8F%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAbW9tb2hvbGE=,size_13,color_FFFFFF,t_70,g_se,x_16.png" alt="在这里插入图片描述"><br>b向量在a向量上的投影方向和a向量相同，长度为k倍<br><img src="/2024/05/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6GAMES101%EF%BC%88%E4%B8%80%EF%BC%89%E5%90%91%E9%87%8F%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/c428c77d2f48414aaf1c6884ab6074a8.png" alt="在这里插入图片描述"><br>求k可以使用下面的公式<br><img src="/2024/05/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6GAMES101%EF%BC%88%E4%B8%80%EF%BC%89%E5%90%91%E9%87%8F%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/9b775946c2e848a1aaabb4129aeab52d.png" alt="在这里插入图片描述"></p><h2 id="3、点乘在计算机图形学中的应用"><a href="#3、点乘在计算机图形学中的应用" class="headerlink" title="3、点乘在计算机图形学中的应用"></a>3、点乘在计算机图形学中的应用</h2><p><img src="/2024/05/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6GAMES101%EF%BC%88%E4%B8%80%EF%BC%89%E5%90%91%E9%87%8F%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAbW9tb2hvbGE=,size_16,color_FFFFFF,t_70,g_se,x_16.png" alt="在这里插入图片描述"><br>可以利用点乘来求一个向量相对于另一个向量是方向相同还是相反<br>当a点乘b  结果&gt;0，a和b向量同向<br>当a点乘c  结果&lt;0，a和c向量反向</p><h2 id="4、叉乘"><a href="#4、叉乘" class="headerlink" title="4、叉乘"></a>4、叉乘</h2><p><img src="/2024/05/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6GAMES101%EF%BC%88%E4%B8%80%EF%BC%89%E5%90%91%E9%87%8F%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAbW9tb2hvbGE=,size_10,color_FFFFFF,t_70,g_se,x_16.png" alt="在这里插入图片描述"><br>叉乘的结果仍是一个向量，可以使用右手定则来确定朝向，右手食指从a向量转向b向量大拇指的朝向就是最终结果的朝向。即叉乘的结果是垂直于a b向量所在的平面的，利用这个性只需要知道两个向量然后利用这两个向量的叉乘来构建一个三维坐标系。</p><p>叉乘的一些性质<img src="/2024/05/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6GAMES101%EF%BC%88%E4%B8%80%EF%BC%89%E5%90%91%E9%87%8F%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAbW9tb2hvbGE=,size_20,color_FFFFFF,t_70,g_se,x_16-17167072977533.png" alt="在这里插入图片描述"><br>叉乘的坐标运算<br><img src="/2024/05/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6GAMES101%EF%BC%88%E4%B8%80%EF%BC%89%E5%90%91%E9%87%8F%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/62d293143eb945dcb640310a6f55f8dd.png" alt="在这里插入图片描述"><br>将叉乘写成矩阵乘法的形式<br><img src="/2024/05/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6GAMES101%EF%BC%88%E4%B8%80%EF%BC%89%E5%90%91%E9%87%8F%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAbW9tb2hvbGE=,size_20,color_FFFFFF,t_70,g_se,x_16-17167072977534.png" alt="在这里插入图片描述"></p><h2 id="5、叉乘在计算机图形学中的应用"><a href="#5、叉乘在计算机图形学中的应用" class="headerlink" title="5、叉乘在计算机图形学中的应用"></a>5、叉乘在计算机图形学中的应用</h2><p>1、判断一个向量对于另一个向量是在左侧还是右侧<br><img src="/2024/05/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6GAMES101%EF%BC%88%E4%B8%80%EF%BC%89%E5%90%91%E9%87%8F%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAbW9tb2hvbGE=,size_17,color_FFFFFF,t_70,g_se,x_16.png" alt="在这里插入图片描述"><br>a叉乘b 如果结果&gt;0   则b在a的左侧<br>b叉乘a 如果结果&lt;0   则a在b的右侧<br>判断方法：使用右手定理，从a向量旋转至b向量，发现大拇指朝外说明结果z是正的。b叉乘a同理</p><p>2、判断一个点是在里面还是外面<br><img src="/2024/05/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6GAMES101%EF%BC%88%E4%B8%80%EF%BC%89%E5%90%91%E9%87%8F%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAbW9tb2hvbGE=,size_14,color_FFFFFF,t_70,g_se,x_16.png" alt="在这里插入图片描述"><br>AB叉乘AP结果为正，说明AP在AB的左边<br>BC叉乘BP结果为正，说明BP在BC的左边<br>CA叉乘CP结果为正，说明CP在CA的左边<br>所以P点在这个三角形里面<br>总结：<br>如果P点在三角形里面 则叉乘的结果全部都是左边或者右边，不能两边都有。</p><h2 id="二、矩阵"><a href="#二、矩阵" class="headerlink" title="二、矩阵"></a>二、矩阵</h2><h2 id="1、矩阵的基本运算"><a href="#1、矩阵的基本运算" class="headerlink" title="1、矩阵的基本运算"></a>1、矩阵的基本运算</h2><p>矩阵乘法<br><img src="/2024/05/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6GAMES101%EF%BC%88%E4%B8%80%EF%BC%89%E5%90%91%E9%87%8F%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAbW9tb2hvbGE=,size_20,color_FFFFFF,t_70,g_se,x_16-17167072977535.png" alt="在这里插入图片描述"><br>矩阵乘法的一些性质（矩阵乘法没有交换率）<br><img src="/2024/05/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6GAMES101%EF%BC%88%E4%B8%80%EF%BC%89%E5%90%91%E9%87%8F%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/c3731a48e1f84ab7a5065088d60f4353.png" alt="在这里插入图片描述"><br>矩阵的转置<br><img src="/2024/05/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6GAMES101%EF%BC%88%E4%B8%80%EF%BC%89%E5%90%91%E9%87%8F%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAbW9tb2hvbGE=,size_20,color_FFFFFF,t_70,g_se,x_16-17167072977546.png" alt="在这里插入图片描述"></p><h2 id="2、单位矩阵和逆矩阵"><a href="#2、单位矩阵和逆矩阵" class="headerlink" title="2、单位矩阵和逆矩阵"></a>2、单位矩阵和逆矩阵</h2><p><img src="/2024/05/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6GAMES101%EF%BC%88%E4%B8%80%EF%BC%89%E5%90%91%E9%87%8F%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAbW9tb2hvbGE=,size_16,color_FFFFFF,t_70,g_se,x_16-17167072977547.png" alt="在这里插入图片描述"></p><h2 id="3、将向量的点乘和叉乘写成矩阵相乘的形式"><a href="#3、将向量的点乘和叉乘写成矩阵相乘的形式" class="headerlink" title="3、将向量的点乘和叉乘写成矩阵相乘的形式"></a>3、将向量的点乘和叉乘写成矩阵相乘的形式</h2><p><img src="/2024/05/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6GAMES101%EF%BC%88%E4%B8%80%EF%BC%89%E5%90%91%E9%87%8F%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAbW9tb2hvbGE=,size_20,color_FFFFFF,t_70,g_se,x_16-17167072977548.png" alt="在这里插入图片描述"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Unity</tag>
      
      <tag>图形学</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Unity英文自动添加连词符“-”</title>
    <link href="/2024/03/16/Unity-hyphen/"/>
    <url>/2024/03/16/Unity-hyphen/</url>
    
    <content type="html"><![CDATA[<p>unity自带的text组件当需要换行时会自动把整个单词都移动到下一行，比如下面的情况:</p><p><img src="/2024/03/16/Unity-hyphen/438bef10aae34a0eb4ff46cf3742f15d.gif" alt="请添加图片描述"></p><p>但当我们有一大段文字的时候这种换行规则会导致文字的右边不能完美的与边缘对齐，会空出来一大片，导致美观度降低。</p><p><img src="/2024/03/16/Unity-hyphen/9a7456e200d14efbbb5a24fe32c42b62.png" alt="在这里插入图片描述"></p><p>所以采用在单词中间进行截断并且添加连词符（-）的方式来避免这种情况的产生。</p><p><img src="/2024/03/16/Unity-hyphen/e1b6e52d2b754162bac5519d8216719e.png" alt="在这里插入图片描述"></p><p><img src="/2024/03/16/Unity-hyphen/1bf063dd857a4f22af12f6018c722fb8.gif" alt="请添加图片描述"></p><p>其主要是利用GetGenerationSettings接口获取字符串的渲染宽度从而自动自动添加连字符，lua 5.1本版需要下载utf8扩展库，其他lua5.3版本自带utf8库，但接口名字有所不同，推荐点击下面的Github链接下载</p><p>C#代码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs c#"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> UnityEngine;<br><span class="hljs-keyword">using</span> UnityEngine.UI;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">UITest</span> : <span class="hljs-title">MonoBehaviour</span><br>&#123;<br>    <span class="hljs-keyword">private</span> Text lab;<br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Awake</span>()</span><br>    &#123;<br>        lab = transform.Find(<span class="hljs-string">&quot;Text&quot;</span>).GetComponent&lt;Text&gt;();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Start</span>()</span><br>    &#123;<br>        <span class="hljs-built_in">string</span> temp = <span class="hljs-string">&quot;lua integration state where scale in projects lua integration state where scale in projects lua integration state where scale in projects lua integration state where scale in projectslua integration state where scale in projects&quot;</span>;<br>        temp = temp.Replace(<span class="hljs-string">&quot; &quot;</span>, <span class="hljs-string">&quot;\u00A0&quot;</span>);<br>        lab.text = temp;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Update</span>()</span><br>    &#123;<br>        <span class="hljs-built_in">string</span> temp = <span class="hljs-string">&quot;lua integration state where scale in projects lua integration state where scale in projects lua integration state where scale in projects lua integration state where scale in projectslua integration state where scale in projects&quot;</span>;<br>        temp = temp.Replace(<span class="hljs-string">&quot; &quot;</span>, <span class="hljs-string">&quot;\u00A0&quot;</span>);<br>        lab.text = temp;<br>        WrapTextWithHyphen(lab, temp);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">WrapTextWithHyphen</span>(<span class="hljs-params">Text textComponent, <span class="hljs-built_in">string</span> str</span>)</span><br>    &#123;<br>        <span class="hljs-built_in">string</span> originalText = str;<br>        <span class="hljs-built_in">string</span>[] words = originalText.Split(<span class="hljs-string">&#x27;\u00A0&#x27;</span>);<br><br>        <span class="hljs-built_in">float</span> textWidth = textComponent.rectTransform.rect.width;<br>        <span class="hljs-built_in">string</span> wrappedText = <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-built_in">string</span> line = <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; words.Length; i++)<br>        &#123;<br>            <span class="hljs-built_in">string</span> word = words[i];<br>            <span class="hljs-built_in">string</span> spaceLine = line + <span class="hljs-string">&quot;\u00A0&quot;</span>;<br>            <span class="hljs-keyword">if</span> (GetTextPreferredWidth(textComponent,spaceLine + word) &gt; textWidth)<br>            &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> j = <span class="hljs-number">1</span>; j &lt;= word.Length; j++)<br>                &#123;<br>                    <span class="hljs-built_in">string</span> substring = word.Substring(<span class="hljs-number">0</span>, j);<br>                    <span class="hljs-keyword">if</span> (GetTextPreferredWidth(textComponent,spaceLine + substring + <span class="hljs-string">&quot;-&quot;</span>) &gt; textWidth)<br>                    &#123;<br>                        <span class="hljs-comment">//防止刚好是空格+单个字母+&quot;-&quot;超行的情况，这个时候直接把这个单词放到下一行</span><br>                        <span class="hljs-keyword">if</span> (j == <span class="hljs-number">1</span>)<br>                        &#123;<br>                            wrappedText += line + <span class="hljs-string">&quot; &quot;</span>;<br>                            line = word;<br>                        &#125;<br>                        <span class="hljs-keyword">else</span><br>                        &#123;<br>                            <span class="hljs-built_in">string</span> tempStr = spaceLine + word.Substring(<span class="hljs-number">0</span>, j - <span class="hljs-number">1</span>) + <span class="hljs-string">&quot;-\n&quot;</span>;<br>                            wrappedText += tempStr;<br>                            line = word.Substring(j - <span class="hljs-number">1</span>);<br>                        &#125;<br>                        <span class="hljs-keyword">break</span>;<br>                    &#125;<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">string</span>.IsNullOrEmpty(line))<br>                &#123;<br>                    line += <span class="hljs-string">&quot;\u00A0&quot;</span>; <br>                &#125;<br>                line += word;<br>            &#125;<br>        &#125;<br><br>        wrappedText += line;<br>        textComponent.supportRichText = <span class="hljs-literal">true</span>;<br>        textComponent.text = wrappedText;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">float</span> <span class="hljs-title">GetTextPreferredWidth</span>(<span class="hljs-params">Text textComp, <span class="hljs-built_in">string</span> content</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> textComp.cachedTextGenerator.GetPreferredWidth(content,<br>            textComp.GetGenerationSettings(textComp.rectTransform.rect.size));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>lua代码：(lua 的utf8库点击下面的链接下载)</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-comment">-- hyphen_util.txt --------------------------------------------------</span><br><span class="hljs-comment">-- author:</span><br><span class="hljs-comment">-- date: </span><br><span class="hljs-comment">-- ver:  </span><br><span class="hljs-comment">-- desc:    自动添加连词符</span><br><span class="hljs-comment">-------------------------------------------------------------------</span><br><br><span class="hljs-keyword">local</span> event = <span class="hljs-built_in">require</span> <span class="hljs-string">&quot;event&quot;</span><br><span class="hljs-keyword">local</span> util = <span class="hljs-built_in">require</span> <span class="hljs-string">&quot;util&quot;</span><br><span class="hljs-keyword">local</span> <span class="hljs-built_in">log</span> = <span class="hljs-built_in">require</span> <span class="hljs-string">&quot;log&quot;</span><br><span class="hljs-keyword">local</span> lang = <span class="hljs-built_in">require</span> <span class="hljs-string">&quot;lang&quot;</span><br><span class="hljs-keyword">local</span> utf8 = <span class="hljs-built_in">require</span> <span class="hljs-string">&quot;utf8&quot;</span><br><span class="hljs-keyword">local</span> <span class="hljs-built_in">tostring</span> = <span class="hljs-built_in">tostring</span><br><span class="hljs-keyword">local</span> <span class="hljs-built_in">ipairs</span> = <span class="hljs-built_in">ipairs</span><br><span class="hljs-keyword">local</span> <span class="hljs-built_in">require</span> = <span class="hljs-built_in">require</span><br><span class="hljs-keyword">local</span> <span class="hljs-built_in">dump</span> = <span class="hljs-built_in">dump</span><br><span class="hljs-keyword">local</span> <span class="hljs-built_in">print</span> = <span class="hljs-built_in">print</span><br><span class="hljs-keyword">local</span> <span class="hljs-built_in">string</span> = <span class="hljs-built_in">string</span><br><span class="hljs-keyword">local</span> <span class="hljs-built_in">tonumber</span> = <span class="hljs-built_in">tonumber</span><br><span class="hljs-keyword">local</span> <span class="hljs-built_in">type</span> = <span class="hljs-built_in">type</span><br><span class="hljs-keyword">local</span> typeof = typeof<br><br><span class="hljs-built_in">module</span>(<span class="hljs-string">&quot;hyphen_util&quot;</span>)<br><br><span class="hljs-keyword">local</span> isEnable = <span class="hljs-literal">true</span>  <span class="hljs-comment">--启用功能</span><br><br><span class="hljs-comment">--下面这些字符前面和后面不会添加连词符</span><br><span class="hljs-keyword">local</span> noAppendHyphenCharacter =<br>&#123;<br>    [<span class="hljs-string">&quot;-&quot;</span>]=<span class="hljs-string">&quot;-&quot;</span>,<br>    [<span class="hljs-string">&quot;.&quot;</span>]=<span class="hljs-string">&quot;.&quot;</span>,<br>    [<span class="hljs-string">&quot;,&quot;</span>]=<span class="hljs-string">&quot;,&quot;</span>,<br>    [<span class="hljs-string">&quot;。&quot;</span>]=<span class="hljs-string">&quot;。&quot;</span>,<br>    [<span class="hljs-string">&quot;，&quot;</span>]=<span class="hljs-string">&quot;，&quot;</span>,<br>    [<span class="hljs-string">&quot;&#123;&quot;</span>]=<span class="hljs-string">&quot;&#123;&quot;</span>,<br>    [<span class="hljs-string">&quot;&#125;&quot;</span>]=<span class="hljs-string">&quot;&#125;&quot;</span>,<br>    [<span class="hljs-string">&quot;(&quot;</span>]=<span class="hljs-string">&quot;(&quot;</span>,<br>    [<span class="hljs-string">&quot;)&quot;</span>]=<span class="hljs-string">&quot;)&quot;</span>,<br>    [<span class="hljs-string">&quot;（&quot;</span>]=<span class="hljs-string">&quot;（&quot;</span>,<br>    [<span class="hljs-string">&quot;）&quot;</span>]=<span class="hljs-string">&quot;）&quot;</span>,<br>    [<span class="hljs-string">&quot;[&quot;</span>]=<span class="hljs-string">&quot;[&quot;</span>,<br>    [<span class="hljs-string">&quot;]&quot;</span>]=<span class="hljs-string">&quot;]&quot;</span>,<br>    [<span class="hljs-string">&quot;|&quot;</span>]=<span class="hljs-string">&quot;|&quot;</span>,<br>    [<span class="hljs-string">&quot;&amp;&quot;</span>]=<span class="hljs-string">&quot;&amp;&quot;</span>,<br>    [<span class="hljs-string">&quot;*&quot;</span>]=<span class="hljs-string">&quot;*&quot;</span>,<br>    [<span class="hljs-string">&quot;/&quot;</span>]=<span class="hljs-string">&quot;/&quot;</span>,<br>    [<span class="hljs-string">&quot;\\&quot;</span>]=<span class="hljs-string">&quot;\\&quot;</span>,<br>    [<span class="hljs-string">&quot;#&quot;</span>]=<span class="hljs-string">&quot;#&quot;</span>,<br>    [<span class="hljs-string">&quot;%&quot;</span>]=<span class="hljs-string">&quot;%&quot;</span>,<br>    [<span class="hljs-string">&quot;~&quot;</span>]=<span class="hljs-string">&quot;~&quot;</span>,<br>    [<span class="hljs-string">&quot;、&quot;</span>]=<span class="hljs-string">&quot;、&quot;</span>,<br>    [<span class="hljs-string">&quot;:&quot;</span>]=<span class="hljs-string">&quot;:&quot;</span>,<br>    [<span class="hljs-string">&quot;;&quot;</span>]=<span class="hljs-string">&quot;;&quot;</span>,<br>    [<span class="hljs-string">&quot;?&quot;</span>]=<span class="hljs-string">&quot;?&quot;</span>,<br>    [<span class="hljs-string">&quot;?&quot;</span>]=<span class="hljs-string">&quot;?&quot;</span>,<br>    [<span class="hljs-string">&quot;!&quot;</span>]=<span class="hljs-string">&quot;!&quot;</span>,<br>    [<span class="hljs-string">&quot;`&quot;</span>]=<span class="hljs-string">&quot;`&quot;</span>,<br>    [<span class="hljs-string">&quot;\&#x27;&quot;</span>]=<span class="hljs-string">&quot;\&#x27;&quot;</span>,<br>    [<span class="hljs-string">&quot;\&quot;&quot;</span>]=<span class="hljs-string">&quot;\&quot;&quot;</span>,<br>    [<span class="hljs-string">&quot;$&quot;</span>]=<span class="hljs-string">&quot;$&quot;</span>,<br>    [<span class="hljs-string">&quot;_&quot;</span>]=<span class="hljs-string">&quot;_&quot;</span>,<br>    [<span class="hljs-string">&quot;0&quot;</span>]=<span class="hljs-string">&quot;0&quot;</span>,<br>    [<span class="hljs-string">&quot;1&quot;</span>]=<span class="hljs-string">&quot;1&quot;</span>,<br>    [<span class="hljs-string">&quot;2&quot;</span>]=<span class="hljs-string">&quot;2&quot;</span>,<br>    [<span class="hljs-string">&quot;3&quot;</span>]=<span class="hljs-string">&quot;3&quot;</span>,<br>    [<span class="hljs-string">&quot;4&quot;</span>]=<span class="hljs-string">&quot;4&quot;</span>,<br>    [<span class="hljs-string">&quot;5&quot;</span>]=<span class="hljs-string">&quot;5&quot;</span>,<br>    [<span class="hljs-string">&quot;6&quot;</span>]=<span class="hljs-string">&quot;6&quot;</span>,<br>    [<span class="hljs-string">&quot;7&quot;</span>]=<span class="hljs-string">&quot;7&quot;</span>,<br>    [<span class="hljs-string">&quot;8&quot;</span>]=<span class="hljs-string">&quot;8&quot;</span>,<br>    [<span class="hljs-string">&quot;9&quot;</span>]=<span class="hljs-string">&quot;9&quot;</span>,<br>&#125;<br><br><span class="hljs-comment">---自动添加连词符，添加连词符需要关闭bestfit、开启富文本显示，只能给needAppendHyphenLanguage列表里面的语言添加连词符</span><br><span class="hljs-comment">---@param textComponent text text组件</span><br><span class="hljs-comment">---@param str string</span><br><span class="hljs-comment">---@param delayTime double 延迟时间，部分text在赋值之后需要短暂延迟才能计算text组件的宽度</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">AutoAppendHyphen</span><span class="hljs-params">(textComponent, str, delayTime)</span></span><br>    <span class="hljs-keyword">local</span> func = <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span></span><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> isEnable <span class="hljs-keyword">then</span><br>            <span class="hljs-keyword">return</span><br>        <span class="hljs-keyword">end</span><br>        <span class="hljs-keyword">if</span> IsNullOrEmpty(str) <span class="hljs-keyword">then</span><br>            str = textComponent.text<br>            <span class="hljs-keyword">if</span> str == <span class="hljs-string">&quot;&quot;</span> <span class="hljs-keyword">then</span><br>                <span class="hljs-keyword">return</span><br>            <span class="hljs-keyword">end</span><br>        <span class="hljs-keyword">end</span><br>        textComponent.resizeTextForBestFit = <span class="hljs-literal">false</span><br>        textComponent.supportRichText = <span class="hljs-literal">true</span><br>        textComponent.text = GetAppendHyphenStr(textComponent, str)<br>    <span class="hljs-keyword">end</span><br><br>    <span class="hljs-keyword">if</span> delayTime <span class="hljs-keyword">then</span><br>        util.DelayCallOnce(delayTime, func)   <span class="hljs-comment">--需要自己实现延迟功能</span><br>    <span class="hljs-keyword">else</span><br>        func()<br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment">---返回添加了连词符的文本</span><br><span class="hljs-comment">---@param textComponent text text组件</span><br><span class="hljs-comment">---@param str string</span><br><span class="hljs-comment">---@return string 返回添加了连词符的文本</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">GetAppendHyphenStr</span><span class="hljs-params">(textComponent, str)</span></span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> isEnable <span class="hljs-keyword">then</span><br>        <span class="hljs-keyword">return</span> str<br>    <span class="hljs-keyword">end</span><br><br>    <span class="hljs-keyword">if</span> IsNullOrEmpty(str) <span class="hljs-keyword">then</span><br>        str = textComponent.text<br>        <span class="hljs-keyword">if</span> str == <span class="hljs-string">&quot;&quot;</span> <span class="hljs-keyword">then</span><br>            <span class="hljs-keyword">return</span> str<br>        <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">end</span><br><br>    <span class="hljs-keyword">local</span> separator = <span class="hljs-string">&quot; &quot;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">string</span>.<span class="hljs-built_in">find</span>(str, <span class="hljs-string">&quot; &quot;</span>) <span class="hljs-keyword">then</span><br>        separator = <span class="hljs-string">&quot; &quot;</span><br>    <span class="hljs-keyword">end</span><br><br>    <span class="hljs-keyword">local</span> words = <span class="hljs-built_in">string</span>.split(str, separator)   <span class="hljs-comment">--按照单词进行分割</span><br>    <span class="hljs-keyword">local</span> textWidth = textComponent.rectTransform.rect.width     <span class="hljs-comment">--获得当前的文本框宽度</span><br>    <span class="hljs-keyword">local</span> line = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">local</span> wrappedText = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> _, word <span class="hljs-keyword">in</span> <span class="hljs-built_in">ipairs</span>(words) <span class="hljs-keyword">do</span><br>        <span class="hljs-keyword">local</span> spaceLine = line .. separator<br>        <span class="hljs-keyword">if</span> GetTextPreferredWidth(textComponent, spaceLine .. word) &gt; textWidth <span class="hljs-keyword">then</span><br>            <span class="hljs-keyword">local</span> substring = <span class="hljs-string">&quot;&quot;</span>                <span class="hljs-comment">--截断的单词</span><br>            <span class="hljs-keyword">local</span> lastSubString = <span class="hljs-string">&quot;&quot;</span>            <span class="hljs-comment">--上一个截断单词</span><br>            <span class="hljs-keyword">local</span> isFind = <span class="hljs-literal">false</span>                <span class="hljs-comment">--是都找到了断行的位置</span><br>            <span class="hljs-keyword">local</span> leaveStr = <span class="hljs-string">&quot;&quot;</span>                 <span class="hljs-comment">--剩余的字符串</span><br>            <span class="hljs-keyword">local</span> oldChar                       <span class="hljs-comment">--上一个字符</span><br>            <span class="hljs-keyword">for</span> pos, <span class="hljs-built_in">char</span> <span class="hljs-keyword">in</span> utf8.codes(word) <span class="hljs-keyword">do</span><br>                substring = substring .. <span class="hljs-built_in">char</span><br>                <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> isFind <span class="hljs-keyword">and</span> GetTextPreferredWidth(textComponent,spaceLine .. substring .. <span class="hljs-string">&quot;-&quot;</span>) &gt; textWidth <span class="hljs-keyword">then</span><br>                    <span class="hljs-comment">--防止刚好是空格+单个字母+&quot;-&quot;超行的情况，这个时候直接把这个单词放到下一行</span><br>                    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> oldChar <span class="hljs-keyword">then</span><br>                        wrappedText = wrappedText .. line  .. <span class="hljs-string">&quot;\n&quot;</span><br>                        line = word<br>                        <span class="hljs-keyword">break</span><br>                    <span class="hljs-keyword">else</span><br>                        wrappedText = wrappedText .. spaceLine .. lastSubString<br>                        <span class="hljs-keyword">if</span> noAppendHyphenCharacter[<span class="hljs-built_in">char</span>] <span class="hljs-keyword">or</span> noAppendHyphenCharacter[oldChar] <span class="hljs-keyword">then</span>   <span class="hljs-comment">--防止出现连续两个换行符的情况</span><br>                            wrappedText = wrappedText .. <span class="hljs-string">&quot;\n&quot;</span><br>                        <span class="hljs-keyword">else</span><br>                            wrappedText = wrappedText .. <span class="hljs-string">&quot;-\n&quot;</span><br>                        <span class="hljs-keyword">end</span><br>                        <span class="hljs-comment">--wrappedText = wrappedText .. spaceLine .. lastSubString .. &quot;-\n&quot;</span><br>                        isFind = <span class="hljs-literal">true</span><br>                    <span class="hljs-keyword">end</span><br>                <span class="hljs-keyword">end</span><br>                <span class="hljs-keyword">if</span> isFind <span class="hljs-keyword">then</span><br>                    leaveStr = leaveStr .. <span class="hljs-built_in">char</span><br>                <span class="hljs-keyword">end</span><br>                oldChar = <span class="hljs-built_in">char</span><br>                lastSubString = substring<br>            <span class="hljs-keyword">end</span><br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> IsNullOrEmpty(leaveStr) <span class="hljs-keyword">then</span><br>                line = leaveStr<br>            <span class="hljs-keyword">end</span><br>        <span class="hljs-keyword">else</span><br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> IsNullOrEmpty(line) <span class="hljs-keyword">then</span><br>                line = line .. separator<br>            <span class="hljs-keyword">end</span><br>            line = line .. word<br>        <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">end</span><br>    wrappedText = wrappedText .. line<br>    <span class="hljs-keyword">return</span> wrappedText<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment">---计算text组件文本的宽度</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">GetTextPreferredWidth</span><span class="hljs-params">(textComponent, str)</span></span><br>    <span class="hljs-keyword">return</span> textComponent.cachedTextGenerator:GetPreferredWidth(str, textComponent:GetGenerationSettings(textComponent.rectTransform.rect.size))<br><span class="hljs-keyword">end</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">SetEnable</span><span class="hljs-params">(state)</span></span><br>    isEnable = state<br><span class="hljs-keyword">end</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">IsNullOrEmpty</span><span class="hljs-params">(str)</span></span><br>    <span class="hljs-keyword">return</span> (<span class="hljs-keyword">not</span> str) <span class="hljs-keyword">or</span> str == <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>Github链接：<br>    <a href="https://github.com/momohola/Unity-hyphen_util">https://github.com/momohola/Unity-hyphen_util</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Unity</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
